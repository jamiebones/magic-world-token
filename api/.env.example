# API Environment Variables for Railway Deployment

# Server Configuration
PORT=3000
NODE_ENV=production
API_BASE_URL=https://magic-world-token-production.up.railway.app

# Blockchain Configuration
BLOCKCHAIN_NETWORK=bscTestnet
PRIVATE_KEY=your-production-private-key-here
RPC_URL=https://data-seed-prebsc-1-s1.binance.org:8545/

# BNB Smart Chain Testnet Configuration (optional)
BSC_TESTNET_RPC_URL=https://data-seed-prebsc-1-s1.binance.org:8545/
BSC_TESTNET_CHAIN_ID=97

# BNB Smart Chain Mainnet Configuration (optional)
BSC_MAINNET_RPC_URL=https://bsc-dataseed1.binance.org/
BSC_MAINNET_CHAIN_ID=56

# Contract Addresses (from your deployment)
TOKEN_CONTRACT_ADDRESS=0x65bC50288b0264ae038EFE6065962dc247eC66Ce
GAME_CONTRACT_ADDRESS=0xa13948CE5FEc61163054d56fA45ac28Fa6870e08

# API Security (Generate strong secrets for production)
JWT_SECRET=your-very-strong-jwt-secret-here-minimum-32-characters
API_KEY_SECRET=your-api-key-secret-here

# Admin API Key Generation (Critical - Keep Secret!)
# To generate a proper hash for your admin secret:
# 1. Choose a strong secret (e.g., "MyS3cur3Adm1nP@ssw0rd!")
# 2. Generate hash: echo -n "MyS3cur3Adm1nP@ssw0rd!" | sha256sum
# 3. Copy the hash output below (64 character hex string)
# Example output: a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456
ADMIN_SECRET_HASH=PUT_YOUR_64_CHAR_SHA256_HASH_HERE_NOT_PLAIN_TEXT
ADMIN_SECRET_SALT=ThisIsMySaltForAdminSecretHashing

# Block Explorer API Keys (optional)
POLYGONSCAN_API_KEY=your-polygonscan-api-key-here
BSCSCAN_API_KEY=your-bscscan-api-key-here

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=1000

# Database Configuration (Railway provides PostgreSQL)
DATABASE_URL=${{ Railway.DATABASE_URL }}
MONGODB_URI=mongodb+srv://your-mongodb-connection-string-here

# Logging
LOG_LEVEL=info
LOG_FILE=logs/api.log

# Gas Configuration
MAX_GAS_PRICE_GWEI=50
GAS_LIMIT=500000

# Business Logic Limits
MAX_BATCH_SIZE=200
DAILY_LIMIT_PER_PLAYER=1000

# ============================================================================
# TRADING BOT CONFIGURATION
# ============================================================================

# Bot API Key (for external bots to access bot endpoints)
# Generate via: POST /api/admin/generate-key with permission 'bot' or 'admin'
# BOT_API_KEY=mwt_your_bot_api_key_here

# Bot Wallet Configuration (for executing trades)
BOT_WALLET_ADDRESS=0x...
BOT_WALLET_PRIVATE_KEY=0x...

# PancakeSwap Configuration (BSC Mainnet)
PANCAKE_ROUTER_ADDRESS=0x10ED43C718714eb63d5aA57B78B54704E256024E
MWT_BNB_PAIR_ADDRESS=0x9f55c42d54e07daa717f6458c8c5ed480b7592f0
WBNB_ADDRESS=0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c

# Chainlink Oracles (BSC Mainnet)
CHAINLINK_BNB_USD_FEED=0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE
CHAINLINK_BTC_USD_FEED=0x264990fbd0A4796A3E3d8E37C4d5F87a3aCa5Ebf

# Bot Strategy Configuration
TARGET_PEG_USD=0.01
BOT_ENABLED=false  # Set to true to enable automated trading
DEFAULT_SLIPPAGE=1.0
MAX_TRADE_SIZE_BNB=1.0
DAILY_TRADE_LIMIT_BNB=10.0

# ============================================================================
# AUTO-FINALIZATION CONFIGURATION (Merkle Distributions)
# ============================================================================

# Enable/Disable Auto-Finalization
ENABLE_AUTO_FINALIZATION=false  # Set to true to enable automated finalization

# Cron Schedule (default: weekly on Sunday at midnight UTC)
# Format: "minute hour day-of-month month day-of-week"
# Examples:
#   - "0 0 * * 0"    = Every Sunday at midnight
#   - "0 2 * * *"    = Every day at 2 AM
#   - "0 0 1 * *"    = First day of every month at midnight
#   - "0 */6 * * *"  = Every 6 hours
FINALIZATION_CRON_SCHEDULE=0 0 * * 0

# Cron Timezone (default: UTC)
CRON_TIMEZONE=UTC

# Finalization Wallet (dedicated wallet for gas fees)
# IMPORTANT: Fund this wallet with sufficient BNB for gas fees
# Recommended: 0.1 BNB minimum for ~1000 finalization transactions
FINALIZATION_WALLET_PRIVATE_KEY=0x...your_dedicated_finalization_wallet_private_key_here

# Finalization Limits
MAX_FINALIZATIONS_PER_RUN=50  # Maximum number of distributions to finalize per cron run